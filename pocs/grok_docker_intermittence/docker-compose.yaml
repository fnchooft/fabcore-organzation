# https://medium.com/@eremeykin/how-to-setup-single-primary-postgresql-replication-with-docker-compose-98c48f233bbf
services:

  x-postgres-common:
    &postgres-common
    image: postgres-iproute2:16
    user: postgres
    restart: always
    healthcheck:
      test: 'pg_isready -U user --dbname=postgres'
      interval: 10s
      timeout: 5s
      retries: 5

  db-primary:
    <<: *postgres-common
    container_name: db-primary
    ports:
      - "5433:5433"
    environment:
      PGPORT: 5433
      POSTGRES_USER: user
      POSTGRES_DB: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_HOST_AUTH_METHOD: "scram-sha-256\nhost replication all 0.0.0.0/0 md5"
      POSTGRES_INITDB_ARGS: "--auth-host=scram-sha-256"
    volumes:
      - pg-primary-data:/var/lib/postgresql/data
      - ./configs/00_init.sql:/docker-entrypoint-initdb.d/00_init.sql
    networks:
      - app-net
    cap_add:
      - NET_ADMIN
    command: |
      postgres
      -c wal_level=replica
      -c hot_standby=on
      -c max_wal_senders=10
      -c max_replication_slots=10
      -c hot_standby_feedback=on
      -c listen_addresses=*
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  db-secondary:
    <<: *postgres-common
    container_name: db-secondary
    environment:
      PGPORT: 5433
      PGUSER: replicator
      PGPASSWORD: replicator_password
    ports:
      - "5434:5433"
    networks:
      - app-net
    depends_on:
      db-primary:
        condition: service_healthy
    cap_add:
      - NET_ADMIN
    command: |
      bash -c "
      until pg_basebackup --pgdata=/var/lib/postgresql/data -R --slot=replication_slot --host=db-primary --port=5433
      do
      echo 'Waiting for primary to connect...'
      sleep 1s
      done
      echo 'Backup done, starting replica...'
      chmod 0700 /var/lib/postgresql/data
      postgres
      "
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  proxy:
    image: haproxy:2.8
    container_name: proxy
    volumes:
      - ./configs/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg:ro
    ports:
      - "5432:5432"
    networks:
      - app-net
    depends_on:
      db-primary:
        condition: service_healthy
      db-secondary:
        condition: service_healthy
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  client1:
    image: postgres-iproute2:16
    container_name: client1
    command: tail -f /dev/null
    networks:
      - app-net
    depends_on:
      - proxy
    cap_add:
      - NET_ADMIN
    environment:
      POSTGRES_PASSWORD: password

  client2:
    image: postgres-iproute2:16
    container_name: client2
    command: tail -f /dev/null
    networks:
      - app-net
    depends_on:
      - proxy
    cap_add:
      - NET_ADMIN
    environment:
      POSTGRES_PASSWORD: password

  client3:
    image: postgres-iproute2:16
    container_name: client3
    command: tail -f /dev/null
    networks:
      - app-net
    depends_on:
      - proxy
    cap_add:
      - NET_ADMIN
    environment:
      POSTGRES_PASSWORD: password

volumes:
  pg-primary-data:
  pg-secondary-data:

networks:
  app-net:
    driver: bridge
    name: app-net