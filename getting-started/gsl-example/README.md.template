changequote(`{{', `}}')

# Generator Scripting Language - teaching Gemini

First of all a shout-out to the [GSL](https://github.com/zeromq/gsl)-tool.
It is fantastic, simple, robust and after you get the hang of it - extremely addictive.

Please read more about it - and about its author [Pieter Hintjes](https://en.wikipedia.org/wiki/Pieter_Hintjens).

During a recent course AI was explained and someone mentioned that
Gemini performs better then DeepSeek and ChatGPT in coding tasks.

So I took that opertunity to:

1. Teach Gemini about [GSL](https://github.com/zeromq/gsl)
2. Provide the README.txt file as context
3. Explain what I wanted, and asked it to generate some artifacts.

## The assignment

I want to teach you about GSL, more context is provided here: [README.txt](https://github.com/zeromq/gsl/blob/master/README.txt).

Ask: Write an entities.xml file which contains some entities with typical fields such as name,age etc.

Gemini produced: 

### entities.xml

```xml
include({{entities.xml}})
```

After this I requested it to write the gsl-template to generate, on the basis of the entity-format C-structs.

### entity_generator.gsl
The resulting template after some back and forth looks like this:

```c
include({{entity_generator.gsl}})
```

I then asked it to generate a main.c file and a Makefile in order to compile the entire example:

### main.c

```c
include({{main.c}})
```

### Makefile

```Makefile
include({{Makefile}})
```


## Generated artifacts

As this should be a generic entity-generator, this first template generates C-code.
This might not be the cleanest code, however a 'seasoned' C-developer would be able
to provide a working version, which contains best practices for memory-management etc.

This working example could easily be taking by AI or a Human/AI - Centaur to generate
templates for other languages.

So, here come the generated artifiacts.

### Person.h

```c
include({{Person.h}})
```

### Person.c

```c
include({{Person.c}})
```


## Conclusions

1. Gemini is better at this then the other solutions I tried. It outperformes DeepSeek ( which I think is really good!)
2. Gemini might get stuck on a certain issue - for instance - in the templates, the code which needs to be generated should not have a dot as first character.
3. C-code might be better, but leave it to experts ( humanzzzz ) to provider better examples which we can incorporate.
